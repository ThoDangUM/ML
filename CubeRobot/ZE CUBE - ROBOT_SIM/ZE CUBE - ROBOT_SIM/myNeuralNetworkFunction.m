function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 23-May-2022 10:25:05.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 4xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-16.24;-16.24;-20];
x1_step1.gain = [0.061576354679803;0.061576354679803;0.05];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.73215774310074854814;-1.0433586748237249076;6.8591270095050926869;-0.71862149730809676829;-1.0092749555315081444;0.88185521853828530148;299.55003006257061315;-1.853030977631920706;-0.88620957233079777904;-0.12015597836302394086;-0.52558205339114283383;-0.15429005760410369197;0.49907070522907992505;-7.1297476632963245891;1.2205876512016378133;-0.51520776413680102745;-0.70263448171286480015;5.328913109346576249;5.3220586142549475284;13.142607847893044593];
IW1_1 = [0.81373397440819084103 0.71110434249657006323 -0.32398337705490853899;0.018897038532799802224 -0.0091696848615225069745 -0.61174607676637871023;-1.1820160812902036351 2.4135217424611830062 7.3676196282070849364;0.79796646499256318474 0.71926096041315856766 0.047535420706923056655;-0.056680108543041424207 0.044923193680570662478 -1.167843739781409651;-9.0231030187458749481 -9.0577072480894766926 0.90717252238718348867;0.33077984073088001482 0.88663163809752265632 -296.9534467308518515;0.28947437536070164121 0.038122360474237219907 2.3931630581441596384;9.03606507654478186 9.0666660224569302073 -0.86510030325432418774;0.35387706875651220306 -0.19625401763853378423 1.3424914036745565493;-3.7051985986449027521 3.3564777227615563149 0.30332840617232775804;0.3674455521427897331 -0.19427865780566308529 1.5856613387035771723;3.4566597418297693167 -3.2162462014989028347 0.028092659514704132473;1.0167170084757000126 -2.4071061010696683802 -7.6411366804930418439;0.0032575924323396459811 -0.10645652939907340739 -0.57463236256107608213;-3.5791259480421233619 3.2879190088905372313 0.12898236541512528297;0.78368707100956358502 0.72070213127015558818 0.28873526972380408884;2.1510261685212994642 0.28417461613008260235 -6.2814066213349555312;2.1841751044499932988 0.16431636107122277179 -6.3226706954436373564;9.7929030057453196889 -3.5175381350941057335 -13.007606109867914768];

% Layer 2
b2 = [74.059487211092914549;-71.597121973007801898;-82.101013984502600351;11.868334610175038435];
LW2_1 = [-29.497225713831063842 153.70471578939418578 -3.7541833565116875526 64.245986851544898855 -56.923785411703441639 3.5107407243492043669 25.359067324008425004 5.0395951284832030126 3.5653670967835178196 -42.09582170826487868 13.766032246644183346 37.875741762271331936 -14.812717112083012339 -4.5665742515080944841 -23.085884809750190527 -28.561745485773563757 -35.352861633896637272 -3.7987958455786654532 4.3734389049002562189 0.038217351875504901315;14.529178706440475821 -23.442688429547963835 -3.3032465757296924913 -54.622007988256662259 2.857968300748685575 -5.7707192760872487725 11.360976741224206421 5.5310885139410137512 -5.8454348392235520038 -12.642634068261674685 -12.42326834442949135 11.872071623237928861 12.683442297551598799 -2.5804174754382018797 60.586708245344247814 25.120756484124221686 40.741175369748631852 -17.330131700861667099 16.77877172965486352 0.26873507550940134436;-22.831748100284116276 -131.04047918644869242 10.943080581964879983 72.048535065587728354 55.474237562276648816 1.900961111940413728 17.664425330702218986 -4.5598158385239280221 1.9558135846691868664 44.821009126764792541 16.320505364883988619 -39.166151546093622926 -19.367859879516174715 11.750764432171900253 1.5408261379292327309 -35.571251748991471686 -49.872668393343921878 9.1981908147586022295 -9.6050989495733460899 -0.35209501546734761623;44.876576005846970929 34.861351636964478473 4.6695368208273464461 -98.531385955248467212 -17.191408409406033542 -4.3721796321829442533 23.267239302526636635 -3.4993920363799140283 -4.3812213558877308728 -6.4204957962727426946 -10.732607380541189457 3.6903561968461917608 12.072757418934589424 4.1629021311600862276 -30.419466873933938444 22.783756031514254659 54.259075375173836164 16.461511805782219398 -15.74915570801530329 -0.12083907511522540279];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.01;0.01;0.01;0.01];
y1_step1.xoffset = [-100;-100;-100;-100];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
