function [y1] = myNeuralNetworkFunction_41_sample(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 31-May-2022 06:55:46.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 4xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-16.24;-16.24;-20];
x1_step1.gain = [0.061576354679803;0.061576354679803;0.05];
x1_step1.ymin = -1;

% Layer 1
b1 = [-5.3136822861118861994;-4.8511593385067746098;5.4981289229129064466;-1.7517178786948621738;-1.7611873474122679006;-0.097537349199207007411;-0.86323062660720895067;0.86747108021455632265;-0.79033823515624024303;-4.4582403101490646335;2.0049038891894164216;0.77456092098384099476;0.77838505767112009526;-0.71305232843399712905;0.7300806987749536292;0.723551259908656208;5.948524706108238469;5.4621491494564526903;14.108107493745452032;-0.92737152229319308461];
IW1_1 = [1.0869485473762701133 -2.093535414453830068 5.5371247346142959955;0.48007004001312147956 -0.14959407132709925947 -5.3798800198479668211;-1.1919968543872061506 2.0132898179426290675 -5.7419314478048359973;2.9496238181167893089 -3.0073481173658995758 1.7309710958556738802;2.9671214828502487926 -3.0113528298889433721 1.7019749123733063367;0.024816780005297290473 0.28160459519092173597 -1.0263501547384923374;7.5276247728040708296 -7.5356250941617961558 -0.83134730550042301722;-7.5424612878225270052 7.5426077137516305271 0.80954280785196697234;-0.7220945814397803364 0.65203010608255496106 1.0359894472603663473;0.41487337456736017582 0.061245964504119142224 -5.000082558787691589;24.702504155239196848 23.341672098332907126 -0.036281834656492553681;0.61177215061680034758 -0.62681605710157106692 0.4819140020026494442;0.62800992673039413017 -0.6232374637175442933 0.57542824398245906448;-0.78519506594836108171 -0.72306606880435475571 -0.23674937692317621352;0.81900418255357521069 0.76509749592997711165 -0.26216057583485241622;0.79757006372697702989 0.74582393616158071392 0.00949940385208499459;-0.24161309249689366663 0.7125172022515724457 6.499966227895309423;-0.40764702290986698507 0.47670148267594342206 6.0019933083933407758;-9.7634816110336402062 -8.2344268974077170498 -12.585298747902188055;1.2904674710158803297 1.3187778748749465763 -2.2840849453407972014];

% Layer 2
b2 = [1.2605144995479662384;-0.38715766660685185796;0.50258540858271205654;-0.37561559313406100991];
LW2_1 = [9.8019254449137225293 143.43715306306620505 9.032407694644271956 3.7683987973866237553 -3.8291845966934143775 -0.94736285662093433491 9.0419753003971159444 9.0618086360445495586 5.637048247003895618 -63.551147263633900764 -0.04761960513079192131 63.230893368536221999 -56.238675760774896162 -88.499193963544954045 91.707420566368838877 -179.24571437445129618 -42.738202956134742294 121.51652119625940429 -0.086333093416219031102 0.79868185606640340612;23.76218348907017841 -41.427562466018351017 23.202522091351568179 -8.4430709698560821863 8.565348264631523989 -5.7098490235591246034 -7.2257737020187304822 -7.2724287072703832635 -5.1806643203575086787 6.914810536554662157 0.061342783085513753749 -47.469496171991579558 41.792293414127215101 92.86561576872070134 -59.96997140818983496 151.99547610379295293 31.428124411032516861 -64.69483819225703769 -0.20597119673620825631 0.2508891569777488284;6.3123898520968735326 -51.342386920865337174 6.4475576010741493249 7.1328776121075838645 -7.3017834006670527813 1.5371688992999892331 11.798176940629499398 11.855605566283468733 -0.19413091986258129706 27.759729306891621547 -0.057613000781726660116 43.090235584347631459 -43.946898451038677536 -44.083678396366508423 17.54398875731778773 -61.657930505156791412 1.6032280527388877989 -25.135795270746800867 -0.32552494948469179459 -0.51339419904438432507;-17.810479607154636739 71.930524089513184549 -16.453389746368650037 -18.989280452547710354 19.056819380674621556 4.6896951314382135934 -6.0674098480952913803 -6.1346705469795574928 -0.84877417459434090219 -23.641254484951787163 0.073648164171682711787 -53.380957817501204943 52.282490167251069124 51.0836337943115808 -55.629772871267071821 106.42026211975687033 -39.53258438209483927 87.212612147934791551 0.031247239088548622865 -0.36030217579791945504];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.01;0.01;0.01;0.01];
y1_step1.xoffset = [-100;-100;-100;-100];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
